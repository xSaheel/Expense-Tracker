[{"D:\\WebD\\expense-tracker\\client\\src\\index.js":"1","D:\\WebD\\expense-tracker\\client\\src\\App.js":"2","D:\\WebD\\expense-tracker\\client\\src\\components\\Header.js":"3","D:\\WebD\\expense-tracker\\client\\src\\components\\Income.js":"4","D:\\WebD\\expense-tracker\\client\\src\\components\\Footer.js":"5","D:\\WebD\\expense-tracker\\client\\src\\components\\Balance.js":"6","D:\\WebD\\expense-tracker\\client\\src\\components\\History.js":"7","D:\\WebD\\expense-tracker\\client\\src\\components\\AddTransaction.js":"8","D:\\WebD\\expense-tracker\\client\\src\\context\\GlobalState.js":"9","D:\\WebD\\expense-tracker\\client\\src\\components\\Transaction.js":"10","D:\\WebD\\expense-tracker\\client\\src\\context\\AppReducer.js":"11"},{"size":154,"mtime":1609937738768,"results":"12","hashOfConfig":"13"},{"size":632,"mtime":1610563196066,"results":"14","hashOfConfig":"13"},{"size":190,"mtime":1610215689460,"results":"15","hashOfConfig":"13"},{"size":909,"mtime":1610566646957,"results":"16","hashOfConfig":"13"},{"size":211,"mtime":1611128209372,"results":"17","hashOfConfig":"13"},{"size":705,"mtime":1611126773663,"results":"18","hashOfConfig":"13"},{"size":858,"mtime":1611055528138,"results":"19","hashOfConfig":"13"},{"size":1835,"mtime":1610601674786,"results":"20","hashOfConfig":"13"},{"size":2187,"mtime":1611056173183,"results":"21","hashOfConfig":"13"},{"size":648,"mtime":1611056536600,"results":"22","hashOfConfig":"13"},{"size":817,"mtime":1611128383323,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1k07wja",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\WebD\\expense-tracker\\client\\src\\index.js",[],["51","52"],"D:\\WebD\\expense-tracker\\client\\src\\App.js",[],"D:\\WebD\\expense-tracker\\client\\src\\components\\Header.js",[],"D:\\WebD\\expense-tracker\\client\\src\\components\\Income.js",["53","54"],"import React, { useContext } from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nconst Income = () => {\r\n\r\n    const {transactions} = useContext(GlobalContext);\r\n    var income=0,expense=0;\r\n    const amounts = transactions.map(transaction => {\r\n        if(transaction.sign === false){\r\n            expense += parseInt(transaction.amount);\r\n        }\r\n        else{\r\n            income += parseInt(transaction.amount);\r\n        }\r\n    });\r\n\r\n    return(\r\n        <div className=\"expense-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"gain\">₹{Number(income.toFixed(2)).toLocaleString('en-in')}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className=\"loss\">₹{Number(expense.toFixed(2)).toLocaleString('en-in')}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Income;","D:\\WebD\\expense-tracker\\client\\src\\components\\Footer.js",[],"D:\\WebD\\expense-tracker\\client\\src\\components\\Balance.js",["55","56"],"import React, { useContext } from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nconst Balance = () => {\r\n    \r\n    const {transactions} = useContext(GlobalContext);\r\n    var total=0;\r\n    const amounts = transactions.map(transaction => {\r\n        if(transaction.sign === false){\r\n            total -= parseFloat(transaction.amount);\r\n        }\r\n        else{\r\n            total += parseFloat(transaction.amount);\r\n        }\r\n    });\r\n\r\n    return(\r\n        <div className=\"balance\">\r\n            <h3 className=\"bal-header\">Balance</h3>\r\n            <h1 className=\"amount\">₹{Number(total.toFixed(2)).toLocaleString('en-in')}</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Balance;","D:\\WebD\\expense-tracker\\client\\src\\components\\History.js",["57"],"import React, {useContext, useEffect} from 'react';\r\nimport Transaction from './Transaction';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nconst History = () => {\r\n\r\n    const { transactions, getTransaction } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        getTransaction();\r\n    },[]);\r\n\r\n    return(\r\n        <div>\r\n            <h3 className=\"history\">History</h3>\r\n            {transactions.length === 0 ? <h4 className=\"no-trans\">───── No Transactions Yet ─────</h4> : <div className=\"scrollView\">\r\n                <ul className=\"list\">\r\n                    {transactions.map(transaction => (\r\n                        <Transaction key = {transaction.id} transaction = {transaction}/>\r\n                    ))}\r\n                </ul>\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default History;","D:\\WebD\\expense-tracker\\client\\src\\components\\AddTransaction.js",[],"D:\\WebD\\expense-tracker\\client\\src\\context\\GlobalState.js",["58"],"import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n    transactions: [],\r\n    error: null,\r\n    loading: true\r\n}\r\n\r\nexport const GlobalContext = React.createContext(initialState);\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    async function getTransaction() {\r\n        try {\r\n            const res = await axios.get('/api/v1/transactions');\r\n            \r\n            dispatch({\r\n                type: 'GET_TRANSACTIONS',\r\n                payload: res.data.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    async function deleteTransaction(id) {\r\n        try {\r\n            await axios.delete(`/api/v1/transactions/${id}`);\r\n            dispatch({\r\n                type: 'DELETE_TRANSACTION',\r\n                payload: id\r\n            })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            })\r\n        }\r\n    }\r\n\r\n    async function addTransaction(transaction) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('/api/v1/transactions',transaction,config);\r\n            dispatch({\r\n                type : 'ADD_TRANSACTION',\r\n                payload: res.data.data\r\n            })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            error: state.error,\r\n            loading: state.loading,\r\n            getTransaction,\r\n            deleteTransaction,\r\n            addTransaction\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\n","D:\\WebD\\expense-tracker\\client\\src\\components\\Transaction.js",[],"D:\\WebD\\expense-tracker\\client\\src\\context\\AppReducer.js",["59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":8,"column":11,"nodeType":"66","messageId":"67","endLine":8,"endColumn":18},{"ruleId":"68","severity":1,"message":"69","line":8,"column":50,"nodeType":"70","messageId":"71","endLine":8,"endColumn":52},{"ruleId":"64","severity":1,"message":"65","line":8,"column":11,"nodeType":"66","messageId":"67","endLine":8,"endColumn":18},{"ruleId":"68","severity":1,"message":"69","line":8,"column":50,"nodeType":"70","messageId":"71","endLine":8,"endColumn":52},{"ruleId":"72","severity":1,"message":"73","line":11,"column":7,"nodeType":"74","endLine":11,"endColumn":9,"suggestions":"75"},{"ruleId":"64","severity":1,"message":"76","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":30},{"ruleId":"77","severity":1,"message":"78","line":1,"column":1,"nodeType":"79","endLine":31,"endColumn":2},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'amounts' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTransaction'. Either include it or remove the dependency array.","ArrayExpression",["82"],"'createContext' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [getTransaction]",{"range":"85","text":"86"},[310,312],"[getTransaction]"]